@{
    ViewBag.Title = "NewMail";
}

@Styles.Render("~/Content/new.css")
@Scripts.Render("~/Scripts/new-task.js")

<script>
    function newMailMenuSelect(e) {
        var dialog = $("#newMailDialog").data("kendoDialog");
        var itemText = $(e.item).children(".k-link").text();

        if (itemText == "Send") {
            dialog.content("This is a Demo Application and your mail will not be send successfully. To develop further this functionality, please visit a help link SmptClient Class.");
            dialog.open();
        }
        else if (itemText == "Save") {
            dialog.content("This is a Demo Application and mail saving functionality is not available.");
            dialog.open();
        }
        else if (itemText == "Cancel") {
            if ("@(ViewBag.FromView)" && "@(ViewBag.FromView)" === "Contacts") {
                window.location.href = "/Contacts/Index/";
            } else {
                window.location.href = "/Home/Index/";
            }
        }
    }
</script>

<div class="toolbar">
    @(Html.Kendo().Menu()
        .Name("newMailButtons")
        .Items(items =>
        {
            items.Add()
                .Text("Send");
            items.Add()
                .Text("Save");
            items.Add()
                .Text("Cancel");
        })
        .Events(e => e.Select("newMailMenuSelect"))
            )
            @(Html.Kendo().Dialog()
            .Name("newMailDialog")
            .Visible(false)
            .Title("")
            .MaxWidth(400)
            .Title("Demo Application")
            .Actions(actions =>
            {
                actions.Add().Text("OK").Primary(true);
            })
    )
</div>
<div class="inner-section">
    <div class="form-wrapper">
        @Html.Label("newMailSender", "From")
        @(Html.Kendo().DropDownList()
            .Name("newMailSender")
            .BindTo(new List<SelectListItem>() {
                new SelectListItem() {
                    Text = "Antonio.Morandi@progress.com",
                    Value = "1"
                }
            })
            .Value("1")
            .HtmlAttributes(new { style = "width: 280px;" })
        )
    </div>
    @Html.Label("newMailPriority", "Priority")
    @(Html.Kendo().DropDownList()
    .Name("newMailPriority")
    .BindTo(new List<SelectListItem>() {
        new SelectListItem() {
            Text = "Normal",
            Value = "1"
        },
        new SelectListItem() {
            Text = "Urgent",
            Value = "2"
        },
        new SelectListItem() {
            Text = "High",
            Value = "3"
        },
        new SelectListItem() {
            Text = "Low",
            Value = "4"
        }
    })
    .Value("1")
    .HtmlAttributes(new { style = "width: 100px;" })
    )
    <label for="to-textbox">To</label>
    <input type="text" class="k-input long-textbox to-textbox" name="to-textbox" value="@ViewBag.MailTo">
    <label for="subject-textbox">Subject</label>
    <input type="text" class="k-input long-textbox subject-textbox" name="subject-textbox" value="@(ViewBag.Subject)">
    <div class="attachements-line">
        <label for="files">Attachments</label>
        @(Html.Kendo().Upload()
        .Name("files")
        .Async(a => a
            .Save("Save", "Upload")
            .Remove("Remove", "Upload")
            .AutoUpload(true)
        )
        .Messages(m => m.Select("Add files ..."))
        )
    </div>

    @(Html.Kendo().Editor()
    .Name("newMail")
    .HtmlAttributes(new { style = "height: 500px;" })
    )
</div>

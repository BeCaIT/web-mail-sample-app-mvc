@{
    ViewBag.Title = "Mails";
}

@model IEnumerable<TelerikMvcWebMail.Models.MailViewModel>

<aside class="treeview-wrapper">
    @{ Html.RenderPartial("TreeView"); }
</aside>

<div class="content">
    @(Html.Kendo().ToolBar()
        .Name("IndexToolbar")
        .Items(items =>
        {
            items.Add().Type(CommandType.SplitButton).Text("Reply").MenuButtons(menuButtons =>
            {
                menuButtons.Add().Text("Reply");
                menuButtons.Add().Text("Reply All");
                menuButtons.Add().Text("Forward");
            });

            items.Add().Type(CommandType.Button).Text("Delete").Click("toolBarButtonClick");

            items.Add().Type(CommandType.SplitButton).Click("toolBarButtonClick").Text("Move").MenuButtons(menuButtons =>
            {
                menuButtons.Add().Text("Inbox");
                menuButtons.Add().Text("Junk");
                menuButtons.Add().Text("Drafts");
                menuButtons.Add().Text("Deleted");
            });

            items.Add().Type(CommandType.SplitButton).Text("Junk").MenuButtons(menuButtons =>
            {
                menuButtons.Add().Text("Report Spam");
            });

            items.Add().Type(CommandType.SplitButton).Text("More").MenuButtons(menuButtons =>
            {
                menuButtons.Add().Text("Reply").Url("/Home/NewMail");
                menuButtons.Add().Text("Reply All").Url("/Home/NewMail");
                menuButtons.Add().Text("Forward").Url("/Home/NewMail");
            });

            items.Add().Type(CommandType.Button).SpriteCssClass("k-tool-icon k-justifyLeft").Click("changeToVerticalPanes");
            items.Add().Type(CommandType.Button).SpriteCssClass("k-tool-icon k-justifyRight").Click("changeToHorizontalPanes");
        })
    )
    <div class="inner-mail-content">
        <div class="mail-grid">
            <input type="button" name="" value="test filter" onclick="testFilter()" />
			<input type="button" name="" value="set field" onclick="setField()" />
            @(Html.Kendo().Grid(Model)
				.Name("MailGrid")
				.Columns(columns =>
				{
					columns.Bound(p => p.CheckBoxCheked)
						.Title("")
						.Width(80)
						.ClientTemplate("<input type='checkbox' #= CheckBoxCheked ? checked='checked': '' # class='chkbx' />");
					columns.Bound(p => p.From).Title("From").Width(300);
					columns.Bound(p => p.Subject).Title("Subject");
					columns.Bound(p => p.Date).Title("Date").Width(300).Format("{0:g}");
				})
				.HtmlAttributes(new { style = "height: 100%;" })
				.Sortable()
				.Scrollable()
				.Filterable()
				.Groupable()
				.Selectable(s => s.Mode(GridSelectionMode.Multiple))
				.DataSource(dataSource => dataSource
					.Ajax()
					.AutoSync(true)
					.PageSize(20)
					.Model(model => model.Id(p => p.MailID))
					.Create(create => create.Action("Create", "Home"))
					.Read(read => read.Action("Read", "Home"))
					.Update(update => update.Action("Update", "Home"))
					
				)
				.Events(e => e.Change("mailSelectionChanged"))
            )
        </div>
        <div class="mail-details">
            <div class="mail-details-header">
                <p class="mail-subject"></p>
                <p class="mail-sender"></p>
                <p class="mail-date"></p>
            </div>
            <p class="mail-text"></p>
        </div>
    </div>
</div>
<script>
	function toolBarButtonClick(e) {
		var grid = $("#MailGrid").data("kendoGrid");
		var selectedItem = grid.dataItem(grid.select());
		
		selectedItem.Folder = e.target.text();
		selectedItem.dirty = true;
		grid.dataSource.sync();
	}

    function testFilter(e) {
        var grid = $("#MailGrid").data("kendoGrid");
        grid.dataSource.filter({ field: "Folder", operator: "eq", value: "Junk" });
        grid.refresh();
    }

    function changeToVerticalPanes() {
        $('.mail-grid').attr('style', "display: inline-block; width: 35%");
        $('.mail-details').attr('style', "display: inline-block; vertical-align: top;");
    }

    function changeToHorizontalPanes() {
        $('.mail-grid').attr('style', "display: block;");
        $('.mail-details').attr('style', "display: block;");
    }

    function mailSelectionChanged(e) {
        var selectedRows = this.select();
        $('input.chkbx').prop('checked', false);
        
        var checkboxes = selectedRows.find('.chkbx');
        checkboxes.prop('checked', true);

        if (selectedRows.length === 1) {
            var dataItem = this.dataItem(selectedRows[0]);
            populateDetailsView(dataItem);
        }
    }

    $(document).ready(function () {
        $($('input.chkbx')[0]).prop('checked', true);

        var gridData = $('#MailGrid').data('kendoGrid').dataSource;
        var firstItem = gridData.data()[0];
        populateDetailsView(firstItem);
    });

    function populateDetailsView(item) {
        $('.mail-subject').text(item.Subject);
        $('.mail-sender').text(item.From);
        $('.mail-date').text(item.Date);
        $('.mail-text').text(item.Text);
    }
</script>

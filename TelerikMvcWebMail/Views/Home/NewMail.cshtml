
@{
    ViewBag.Title = "NewMail";
}

@Scripts.Render("~/Scripts/new-task.js")

<script>
    function newMailMenuSelect(e) {
        var dialog = $("#newMailDialog").data("kendoDialog");
        var itemText = $(e.item).children(".k-link").text();

        if (itemText == "Send") {
            dialog.content("This is a Demo Application and your mail will not be send successfully. To develop further this functionality, please visit a help link SmptClient Class.");
            dialog.open();
        }
        else if (itemText == "Save") {
            dialog.content("This is a Demo Application and mail saving functionality is not available.");
            dialog.open();
        }
        else if (itemText == "Cancel") {
            if ("@(ViewBag.FromView)" && "@(ViewBag.FromView)" === "Contacts") {
                window.location.href = "/Contacts/Index/";
            } else {
                window.location.href = "/Home/Index/";
            }
        }
    }
</script>
<div class="new-wrapper">
    @(Html.Kendo().Menu()
    .Name("newMailButtons")
    .Items(items =>
    {
        items.Add()
            .Text("Send");
        items.Add()
            .Text("Save");
        items.Add()
            .Text("Cancel");
    })
    .Events(e => e.Select("newMailMenuSelect"))
    )
    @(Html.Kendo().Dialog()
        .Name("newMailDialog")
        .Visible(false)
        .Title("")
        .Actions(actions =>
        {
            actions.Add().Text("OK").Primary(true);
        })
    )
    <div class="new-line">
        <div class="new-mail-dropdown-wrapper">
            @Html.Label("newMailSender", "From")
            <br />
            @(Html.Kendo().DropDownList()
                .Name("newMailSender")
                .BindTo(new List<SelectListItem>() {
                    new SelectListItem() {
                        Text = "Antonio.Morandi@progress.com",
                        Value = "1"
                    }
                })
                .Value("1")
                .HtmlAttributes(new { style = "width: 280px;" })
            )
        </div>
        <div class="new-mail-dropdown-wrapper">
            @Html.Label("newMailPriority", "Priority")
            <br />
            @(Html.Kendo().DropDownList()
                .Name("newMailPriority")
                .BindTo(new List<SelectListItem>() {
                    new SelectListItem() {
                        Text = "Normal",
                        Value = "1"
                    },
                    new SelectListItem() {
                        Text = "Urgent",
                        Value = "1"
                    },
                    new SelectListItem() {
                        Text = "High",
                        Value = "1"
                    },
                    new SelectListItem() {
                        Text = "Low",
                        Value = "1"
                    }
                })
                .Value("1")
                .HtmlAttributes(new { style = "width: 100px;" })
            )
        </div>
    </div>
    <div class="new-line">
        <label for="to-textbox">To</label>
        <br/>
        <input type="text" class="k-input long-textbox to-textbox" name="to-textbox" value="@ViewBag.MailTo">
    </div>
    <div class="new-line">
        <label for="subject-textbox">Subject</label>
        <br />
        <input type="text" class="k-input long-textbox subject-textbox" name="subject-textbox" value="@(ViewBag.Subject)">
    </div>
    <div class="attachements-line">
        <label for="files">Attachments</label>
        @(Html.Kendo().Upload()
            .Name("files")
            .Async(a => a
                .Save("Save", "Upload")
                .Remove("Remove", "Upload")
                .AutoUpload(true)
            )
            .Messages(m => m.Select("Add files ..."))
        )
    </div>


    @(Html.Kendo().Editor()
      .Name("newMail")
      .HtmlAttributes(new { style = "height: 500px;" })
    )
</div>

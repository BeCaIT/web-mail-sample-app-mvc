@{
    ViewBag.Title = "Tasks";
}

@model IEnumerable<TelerikMvcWebMail.Models.NoteViewModel>

<aside class="main-sidebar">
	<div class="content">
		<span class="new-btn">Add Task</span>
		@*@Html.ActionLink("Add Task", "NewTask")*@
		@(Html.Kendo().TreeView()
        .Name("tasksTreeView")
        .Events(e => e.Select("selecttaskFolder"))
		)
	</div>
	@Html.Partial("SidebarFooter")
</aside>

<div class="content">
	<div class="toolbar">	
		<span class="btn-delete">Delete</span>
	</div>
	<div class="notes">
        <input type="text" class="k-input long-textbox search-textbox" placeholder="Search tasks ..." name="to-textbox">
		@(Html.Kendo().Grid(Model)
            .Name("noteGrid")
            .Columns(columns =>
            {
                columns.Bound(p => p.CheckBoxCheked)
                    .Title("")
                    .Width(80)
                    .ClientTemplate("<input type='checkbox' #= CheckBoxCheked ? checked='checked': '' # class='chkbx' />");
                columns.Bound(p => p.Subject).Title("Subject");
                columns.Bound(p => p.CreatedOn).Title("Created On").Width(300).Format("{0:g}");
                columns.Bound(p => p.Category).Title("Category");

            })
            .Editable(e => e.Mode(GridEditMode.InLine))
            .Selectable(s => s.Mode(GridSelectionMode.Multiple))
            .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read.Action("Tasks_Read", "Tasks"))
                .Create(create => create.Action("Tasks_Create", "Tasks"))
                .Update(update => update.Action("Tasks_Update", "Tasks"))
                .Destroy(destroy => destroy.Action("Tasks_Destroy", "Tasks"))
                .Model(model => {
                    model.Id(p => p.Id);
                    model.Field(p => p.Id).Editable(false);
                    model.Field(p => p.CheckBoxCheked).Editable(false);
                    model.Field(p => p.CreatedOn).Editable(false);
                })
            )
            .Events(e => e
                .Change("noteSelectionChanged")
                .DataBound("tasksGridDataBound")
            )
        )
	</div>
</div>

<script>
    function noteSelectionChanged(e) {
        var selectedRows = this.select();
        $('input.chkbx').prop('checked', false);

        var checkboxes = selectedRows.find('.chkbx');
        checkboxes.prop('checked', true);
    }

    function getInitialNumberOfItems(gridData) {
        var numbers = { All: 0, Personal: 0, Work: 0 };

        for (var i = 0; i < gridData.length; i++) {
            var currentItemCategory = gridData[i].Category;
            numbers[currentItemCategory] += 1;
        }

        return numbers;
    }

    function tasksGridDataBound(e) {
        $.ajax({
            url: '@Url.Action("Tasks_Read", "Tasks")',
            success: function (gridData) {
                var numbers = getInitialNumberOfItems(gridData.Data);
                var data = [{
                    text: "All " + numbers.All,
                    value: "All"
                }, {
                    text: "Personal " + numbers.Personal,
                    value: "Personal"
                }, {
                    text: "Work " + numbers.Work,
                    value: "Work"
                }];

                var newDataSource = new kendo.data.HierarchicalDataSource({ data: data });
                var navigationTreeView = $('#tasksTreeView').data('kendoTreeView');
                navigationTreeView.setDataSource(newDataSource);
            }
        });
    }

    function selecttaskFolder(e) {
        var selectedText = e.sender.dataItem(e.node).value;

        var tasksGrid = $("#noteGrid").data("kendoGrid");
        if (!tasksGrid) {
            window.location.href = "/Tasks/Tasks";
        } else {
            tasksGrid.dataSource.filter({ field: "Category", operator: "contains", value: selectedText });
        }
    }

    $(document).ready(function() {
        $(".search-textbox").on('keyup', function (e) {
            var text = $(e.target).val();

            var tasksGrid = $("#noteGrid").data("kendoGrid");
            tasksGrid.dataSource.filter({ field: "Subject", operator: "contains", value: text });
        });

        $('.btn-delete').on('click', function () {
            var tasksGrid = $("#noteGrid").data("kendoGrid");

            var checkboxesToBeDeleted = $('.chkbx:checkbox:checked');
            var rows = checkboxesToBeDeleted.parents('tr[role="row"]');

            for (var i = 0; i < rows.length; i++) {
                tasksGrid.removeRow(rows[i]);
            }
        });

        $('.add-new-task').on('click', function (e) {
            $(".content").load('@(Url.Action("NewTask", "Tasks"))');
        });
    });
</script>
